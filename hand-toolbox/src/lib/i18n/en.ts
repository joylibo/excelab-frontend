import type { Translation } from './types';

export const en: Translation = {
  common: {
    appName: "Hand Toolbox",
    upload: "Upload",
    download: "Download",
    clear: "Clear",
    cancel: "Cancel",
    confirm: "Confirm",
    loading: "Loading",
    error: "Error",
    success: "Success",
    file: "File",
    files: "Files",
    size: "Size",
    name: "Name",
    type: "Type",
    actions: "Actions",
    dragAndDrop: "Drag and drop files here",
    clickToSelect: "Click to select files",
    or: "or",
    supportedFormats: "Supported formats",
    maxSize: "Max size",
    maxFiles: "Max files",
    statistics: "Statistics",
    selectedFiles: "Selected files"
  },
  header: {
    tables: "Table Processing",
    docs: "Document Processing",
    images: "Image Processing",
    about: "About",
    testConnection: "Test Connection"
  },
  tables: {
    merge: {
      title: "Table Merge",
      description: "Merge multiple Excel/CSV files",
      keepAllColumns: "Keep all columns (fill missing)",
      keepAllColumnsDescription: "Keep all columns from all files, fill missing values with empty",
      keepCommonColumns: "Keep common columns only",
      keepCommonColumnsDescription: "Keep only columns that exist in all files",
      optionsTitle: "Merge Options",
      optionsDescription: "Select merge method"
    },
    split: {
      title: "Table Split",
      description: "Split table by column",
      splitByColumn: "Split by column",
      selectColumn: "Select column"
    },
    clean: {
      title: "Table Clean",
      description: "Clean empty rows and columns from table",
      removeEmptyRows: "Remove empty rows",
      removeEmptyColumns: "Remove empty columns",
      trimSpaces: "Trim spaces",
      optionsTitle: "Clean Options",
      optionsDescription: "Select cleaning operations to perform"
    },
    deduplicate: {
      title: "Table Deduplicate",
      description: "Remove duplicate data from table",
      deduplicateBy: "Deduplicate by",
      method: "Method",
      random: "Random keep",
      max: "Take maximum",
      min: "Take minimum",
      valueField: "Value field",
      valueFieldDescription: "Will decide which duplicate data to keep based on this field's value",
      originalRows: "Original rows",
      deduplicatedRows: "Deduplicated rows",
      optionsTitle: "Deduplicate Options",
      optionsDescription: "Select deduplication method and field"
    }
  },
  docs: {
    pdfToImages: {
      title: "PDF to Images",
      description: "Convert PDF to image formats",
      format: "Format",
      jpeg: "JPEG",
      png: "PNG",
      uploadDescription: "Upload PDF files to convert to image format (ZIP archive)",
      formatOptions: "Image format options",
      formatSelect: "Select output image format",
      formatPlaceholder: "Select image format",
      successMessage: "Conversion successful! PDF converted to images",
      downloadButton: "Download image archive",
      outputFormat: "Output format",
      fileCount: "File count",
      multipleFilesNote: "Multiple PDF files will be merged into one archive"
    },
    pdfMerge: {
      title: "PDF Merge",
      description: "Merge multiple PDF files",
      addToc: "Add table of contents",
      addBlankPage: "Add blank page",
      uploadDescription: "Upload multiple PDF files to merge (minimum 2 files required)",
      successMessage: "Merge successful! {count} PDF files merged into one file",
      downloadButton: "Download merged PDF",
      fileCount: "Merged file count",
      outputFormat: "Output format",
      mergeOrder: "Files will be merged in upload order"
    }
  },
  images: {
    convert: {
      title: "Image Format Convert",
      description: "Convert image file formats",
      format: "Format",
      jpeg: "JPEG",
      png: "PNG",
      webp: "WebP",
      uploadDescription: "Upload image files for format conversion",
      formatOptions: "Conversion options",
      formatSelect: "Select output image format",
      formatPlaceholder: "Select format",
      successMessage: "Conversion successful!",
      downloadButton: "Download converted images",
      outputFormat: "Output format",
      fileCount: "File count",
      multipleFilesNote: "Files will be packaged as ZIP archive for download"
    },
    resize: {
      title: "Image Resize",
      description: "Adjust image dimensions",
      width: "Width",
      height: "Height",
      maintainAspectRatio: "Maintain aspect ratio",
      developing: "Developing"
    },
    crop: {
      title: "Image Crop",
      description: "Crop image area",
      x: "X coordinate",
      y: "Y coordinate",
      width: "Width",
      height: "Height",
      developing: "Developing"
    }
  },
  about: {
    title: "About Hand Toolbox",
    description: "A toolset website focused on efficiency",
    features: "Features",
    github: "GitHub",
    version: "Version",
    author: "Author",
    license: "License",
    contact: "Contact",
    alertHeartFail: "Heartbeat detection failed",
    alertNetworkError: "Network connection error",
    welcome: "Welcome to \"Hand Toolbox\".\n\n\"Hand Toolbox\" is a toolset website focused on efficiency, developed and maintained by me in my spare time. \"Hand Toolbox\" is committed to providing simple and reliable tools to help you complete your work more efficiently.",
    dataSecurityTitle: "Data Security",
    dataSecurity: "All uploaded files are only used for real-time processing and will be automatically deleted after completion. The system does not retain any data files. This project is open source on GitHub. You are welcome to check the code, participate in improvements, or deploy it yourself. If your data is extremely sensitive, it is recommended to run the code in a local environment. ",
    freeServiceTitle: "Pricing",
    freeService: "\"Hand Toolbox\" is free and will remain free in the long term. If you find it useful, you can click a {heart} to support it.",
    contactIdeasTitle: "Feedback & Suggestions",
    contactIdeas: "If you have any needs or ideas, please feel free to contact me. Although I cannot guarantee that every need will be implemented, I am very willing to listen to your voice.\nðŸ“§ libo1701@gmail.com",
    heartTogether: "Hearts together, already {count} supports",
    thankYouSupport: "Thank you for your support",
    clickToSupport: "Click to support the project",
    footer: "Â© 2025 Hand Toolbox - Cherish every impulse"
  },
  processing: {
    processing: "Processing",
    processingProgress: "Processing your files, please wait...",
    processingCompleteMessage: "Processing complete!",
    uploadFilesFirst: "Please upload files first",
    selectDeduplicateColumn: "Please select deduplicate field",
    selectValueColumn: "Please select value field",
    selectSplitColumn: "Please select split field",
    failedToGetColumns: "Failed to get column names",
    deduplicateFailed: "Deduplication failed",
    splitFailed: "Split failed",
    splitSuccess: "Split successful",
    downloadFailed: "Download failed",
    downloadSuccess: "Download successful",
    gettingColumnNames: "Getting column names",
    filesWillBeZipped: "Files will be packaged for download",
    cleanSuccessWithStats: "Clean successful! Removed {emptyRows} empty rows and {emptyColumns} empty columns",
    cleanFailed: "Clean failed",
    deduplicateSuccess: "Deduplication successful",
    duplicatesRemoved: "duplicate data",
    duplicationRate: "Duplication rate",
    removedDuplicates: "Removed {count} duplicate data",
    dataComparison: "Data comparison before and after",
    deduplicatePreview: "Deduplication result preview",
    deduplicatePreviewDescription: "Preview deduplicated table data",
    emptyPreview: "Deduplication result is empty or cannot generate preview",
    mergeSuccess: "Merge successful",
    mergeSuccessWithCount: "Successfully merged {count} files! Preview generated",
    mergeFailed: "Merge failed",
    mergePreview: "Merge result preview",
    mergePreviewDescription: "Preview merged table data",
    pdfMergeFailed: "Merge failed",
    pdfMergeSuccess: "Merge successful! {count} PDF files merged into one file",
    pdfMergeProcessing: "Merging",
    pdfMergeProgress: "Merging PDF files, please wait...",
    pdfMergeComplete: "Merge complete",
    minTwoFilesRequired: "Please select at least two PDF files to merge",
    pdfConvertFailed: "Conversion failed",
    pdfConvertSuccess: "Conversion successful! PDF converted to images",
    pdfConvertProcessing: "Converting",
    pdfConvertProgress: "Converting PDF files, please wait...",
    pdfConvertComplete: "Conversion complete",
    imageConvertFailed: "Conversion failed",
    imageConvertSuccess: "Conversion successful!",
    imageConvertProcessing: "Converting",
    imageConvertProgress: "Converting your images, please wait...",
    imageConvertComplete: "Conversion complete"
  }
};
